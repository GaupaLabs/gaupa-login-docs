"use strict";(self.webpackChunkgaupa_login_docs=self.webpackChunkgaupa_login_docs||[]).push([[283],{3120:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"the-basics/functions","title":"Functions","description":"Functions allows the project to create tailored transactions based on their needs.","source":"@site/docs/the-basics/functions.md","sourceDirName":"the-basics","slug":"/the-basics/functions","permalink":"/gaupa-login-docs/docs/the-basics/functions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/the-basics/functions.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"documentationSidebar","previous":{"title":"Transfers","permalink":"/gaupa-login-docs/docs/the-basics/transfers"},"next":{"title":"Relayers","permalink":"/gaupa-login-docs/docs/the-basics/relayers"}}');var i=s(4848),r=s(8453);const a={sidebar_position:4},d="Functions",o={},c=[{value:"Function Types",id:"function-types",level:2},{value:"Only Allow Functions",id:"only-allow-functions",level:2},{value:"Creating a Function",id:"creating-a-function",level:2},{value:"Wildcards",id:"wildcards",level:3},{value:"Params types",id:"params-types",level:3},{value:"ABI to Functions",id:"abi-to-functions",level:3},{value:"Create EGLD Function",id:"create-egld-function",level:3},{value:"Example:",id:"example",level:4},{value:"Create ESDT Function",id:"create-esdt-function",level:3},{value:"Example:",id:"example-1",level:4},{value:"Create NFT/SFT Function",id:"create-nftsft-function",level:3},{value:"Example:",id:"example-2",level:4},{value:"Create Data Function",id:"create-data-function",level:3},{value:"Example:",id:"example-3",level:4},{value:"Triggering a Function",id:"triggering-a-function",level:2}];function l(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"functions",children:"Functions"})}),"\n",(0,i.jsx)(n.p,{children:"Functions allows the project to create tailored transactions based on their needs."}),"\n",(0,i.jsx)(n.h2,{id:"function-types",children:"Function Types"}),"\n",(0,i.jsx)(n.p,{children:"There are 4 types of functions, similar to permissions."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"EGLD (egld) for EGLD transfers."}),"\n",(0,i.jsx)(n.li,{children:"ESDT (esdt) for ESDT transfers."}),"\n",(0,i.jsx)(n.li,{children:"NFT (nft) for NFT and SFT transfers."}),"\n",(0,i.jsx)(n.li,{children:"Data (data) for non-token-transfer transactions."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"only-allow-functions",children:"Only Allow Functions"}),"\n",(0,i.jsx)(n.p,{children:'We recommend enabling "Functions Only" once setup to ensure that the API Key can only trigger functions and not any type of transaction.'}),"\n",(0,i.jsx)(n.h2,{id:"creating-a-function",children:"Creating a Function"}),"\n",(0,i.jsx)(n.p,{children:"A function allows to prefill values and only leave certain fields open to be filled or modified.\nThe formating of a function varies depending on the type./"}),"\n",(0,i.jsx)(n.p,{children:"Each function has a name which needs to be unique as it's used to be triggered."}),"\n",(0,i.jsx)(n.h3,{id:"wildcards",children:"Wildcards"}),"\n",(0,i.jsxs)(n.p,{children:["Wildcards ",(0,i.jsx)(n.code,{children:'{"$wildcard": true}'})," are the values the project wants to pass as variable. As example the User ID (uuid) is in most cases a wildcard.\nIf no default is provided, the function will fail.",(0,i.jsx)(n.br,{}),"\n","To have a default value: ",(0,i.jsx)(n.code,{children:'{"$wildcard": true, "default": 10000000}'})]}),"\n",(0,i.jsx)(n.h3,{id:"params-types",children:"Params types"}),"\n",(0,i.jsx)(n.p,{children:"To facilitate your experience we're automatically converting the different parameters for you.\nHere are the different types:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Function (function): The function you wish to call (also works with ESDT and NFT transfers)"}),"\n",(0,i.jsx)(n.li,{children:"String (string): Text passed as data."}),"\n",(0,i.jsx)(n.li,{children:"Number (number): Number passed as data."}),"\n",(0,i.jsx)(n.li,{children:"Address (address): A erd address passed as data."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"abi-to-functions",children:"ABI to Functions"}),"\n",(0,i.jsx)(n.p,{children:"Coming soon!"}),"\n",(0,i.jsx)(n.h3,{id:"create-egld-function",children:"Create EGLD Function"}),"\n",(0,i.jsxs)(n.p,{children:["Creating a function to send EGLD on behalf of the user. EGLD Permission needs to be set as ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"userId"})," The User Id of the user.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"amount"})," The amount of EGLD to be sent.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"params"})," (Optional) The parameters to pass as data in addition to the transfer.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"address"})," The address to which send the EGLD to.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"gasLimit"})," The gas limit to be set, can vary depending on transaction content.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"gasPrice"})," The price per gas unit to be paid. Defaults to base price if not specified."]}),"\n",(0,i.jsx)(n.h4,{id:"example",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{\n  "userId": {\n    "$wildcard": true\n  },\n  "amount": {\n    "$wildcard": true\n  },\n  "params": [\n    {\n      "type": "function",\n      "value": "wrapEgld"\n    }\n  ],\n  "address": "erd1qqqqqqqqqqqqqpgqpv09kfzry5y4sj05udcngesat07umyj70n4sa2c0rp",\n  "gasLimit": {\n                "$wildcard": true, \n                "default": 10000000\n              },\n  "gasPrice": {\n                "$wildcard": true, \n                "default": 1000000000\n              }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"create-esdt-function",children:"Create ESDT Function"}),"\n",(0,i.jsxs)(n.p,{children:["Creating a function to send ESDT on behalf of the user. ESDT Permission needs to be set as ",(0,i.jsx)(n.code,{children:"true"})," and token ticker specified."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"userId"})," The User Id of the user.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"token"})," The token ticker of the token to be sent.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"amount"})," The amount of ESDT to be sent.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"params"})," (Optional) The parameters to pass as data in addition to the transfer.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"address"})," The address to which send the ESDT to.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"gasLimit"})," The gas limit to be set, can vary depending on transaction content.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"gasPrice"})," The price per gas unit to be paid. Defaults to base price if not specified."]}),"\n",(0,i.jsx)(n.h4,{id:"example-1",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{\n  "userId": {"$wildcard": true},\n  "token": "WEGLD-a28c59", \n  "amount": {"$wildcard": true}, \n  "params": [\n    {\n      "type": "function", \n      "value": "unwrapEgld"\n    }\n  ],  \n  "address": "erd1qqqqqqqqqqqqqpgqpv09kfzry5y4sj05udcngesat07umyj70n4sa2c0rp", \n  "gasLimit": 10000000, \n  "gasPrice": 1000000000\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"create-nftsft-function",children:"Create NFT/SFT Function"}),"\n",(0,i.jsxs)(n.p,{children:["Creating a function to send NFT or SFT on behalf of the user. NFT Permission needs to be set as ",(0,i.jsx)(n.code,{children:"true"})," and collection ticker specified."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"userId"})," The User Id of the user.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"token"})," The token ticker of the token to be sent.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"nonce"})," The nonce of the NFT/SFT to be sent.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"amount"})," Defaults to 1. Only for SFTs. The amount of an SFT to be sent.\n",(0,i.jsx)(n.code,{children:"params"})," (Optional) The parameters to pass as data in addition to the transfer.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"address"})," The address to which send the NFT/SFT to.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"gasLimit"})," The gas limit to be set, can vary depending on transaction content.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"gasPrice"})," The price per gas unit to be paid. Defaults to base price if not specified."]}),"\n",(0,i.jsx)(n.h4,{id:"example-2",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{\n  "userId": {"$wildcard": true},  \n  "token": "ROGUEITEMS-868439",\n  "nonce": {"$wildcard": true},\n  "amount": {"$wildcard": true}, \n  "params": [{"type": "function", "value": "consume"}], \n  "address": "erd1y49kz9lzu9dtzjzhs7p0f6cs3239khq4sc5gmgrcrqx5nvhp84tsnxapnn", \n  "gasLimit": 10000000, \n  "gasPrice": 1000000000\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"create-data-function",children:"Create Data Function"}),"\n",(0,i.jsx)(n.p,{children:"Creating a function which only contains data. No token transfer."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"userId"})," The User Id of the user.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"params"})," (Optional) The parameters to pass as data in addition to the transfer.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"address"})," The address to which send the data to.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"gasLimit"})," The gas limit to be set, can vary depending on transaction content.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"gasPrice"})," The price per gas unit to be paid. Defaults to base price if not specified."]}),"\n",(0,i.jsx)(n.h4,{id:"example-3",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{\n  "userId": {"$wildcard": true},  \n  "params": [\n    {\n      "type": "function", "value": "claimXP"\n    }, \n    {\n      "type": "string", "name": "someData", "value": {"$wildcard": true}\n      }\n  ], \n  "address": "erd1qqqqqqqqqqqqqpgqpv09kfzry5y4sj05udcngesat07umyj70n4sa2c0rp", \n  "gasLimit": 10000000, \n  "gasPrice": 1000000000\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"triggering-a-function",children:"Triggering a Function"}),"\n",(0,i.jsx)(n.p,{children:"To trigger a function you'll need:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"API Key"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Public Key"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Function Name"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The body will vary depending on the function definition."}),"\n",(0,i.jsx)("iframe",{src:"https://dev-auth.gaupa.xyz/?filter=Function#/Function/manageFunctionUser",width:"100%",height:"800px",style:{border:0},allowFullScreen:!0}),"\n",(0,i.jsx)("a",{href:"https://dev-auth.gaupa.xyz/?filter=Function#/Function/manageFunctionUser",target:"_blank",rel:"noopener noreferrer",children:"Open in new tab \u2197"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);